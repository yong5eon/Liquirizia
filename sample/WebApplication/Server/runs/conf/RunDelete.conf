# -*- coding: utf-8 -*-

from Liquirizia.WebApplication import RequestRunnerProperties

from Liquirizia.WebApplication.Validator import Validator
from Liquirizia.WebApplication.Validator.Patterns import *

from ..RunDelete import RunDelete
from ..errors import *

properties=RequestRunnerProperties(
	RunDelete,
	method='DELETE',
	url='/run/:id',
	qs=Validator(
		IsRequiredInDictionary('a', 'b', error=RequiredError('{} 에는 {} 값이 필요합니다.')),
		IsDictionary({
			'a': Validator(
				TypeEvaluate(),
				IsInteger(
					IsGreaterThan(5, errorResponse=BadRequestErrorResponse('a 는 5보다 커야 합니다')),
					errorResponse=BadRequestErrorResponse('a는 정수를 필요로 합니다.')
				)
			),
			'b': Validator(
				TypeEvaluate(),
				IsFloat(
					IsGreaterThan(9, errorResponse=BadRequestErrorResponse('b 는 9보다 커야 합니다')),
					errorResponse=BadRequestErrorResponse('b는 실수(부동 소수점)을 필요로 합니다.')
				)
			),
			'c': Validator(
				SetDefault(''),
				IsString(errorResponse=BadRequestErrorResponse('c는 문자열을 필요로 합니다.'))
			),
		}),
	),
	body=Validator(
		IsRequiredInDictionary('a', 'b', error=RequiredError('본문에 a 와 b가 필요합니다.')),
		IsDictionary({
			'a': Validator(
				TypeEvaluate(),
				IsInteger(
					IsLessThan(5, errorResponse=BadRequestErrorResponse('a 는 5보다 작아야 합니다')),
					errorResponse=BadRequestErrorResponse('a 는 정수를 필요로 합니다.')
				)
			),
			'b': Validator(
				TypeEvaluate(),
				IsFloat(
					IsLessThan(9, errorResponse=BadRequestErrorResponse('b 는 9보다 작아야 합니다')),
					errorResponse=BadRequestErrorResponse('b 는 실수(부동 소수점)을 필요로 합니다.')
				)
			),
		}),
	)
)
