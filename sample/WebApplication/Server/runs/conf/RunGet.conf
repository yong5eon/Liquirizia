# -*- coding: utf-8 -*-

from Liquirizia.WebApplication import RequestRunnerProperties

from Liquirizia.WebApplication.Validator import Validator
from Liquirizia.WebApplication.Validator.Patterns import *

from ..RunGet import RunGet
from ..errors import RequiredError, BadRequestErrorResponse

properties = RequestRunnerProperties(
	RunGet,
	method='GET',
	url='/run/:id'	,
	qs=Validator(
		IsRequiredInDictionary('a', 'b', error=RequiredError('질의에 a 와 b 는 필수 입니다.')),
		IsDictionary({
			'a': Validator(
				TypeEvaluate(),
				IsInteger(
					IsGreaterThan(5, errorResponse=BadRequestErrorResponse('a 는 5보다 커야 합니다')),
					errorResponse=BadRequestErrorResponse('a는 정수를 필요로 합니다.')
				)
			),
			'b': Validator(
				TypeEvaluate(),
				IsFloat(
					IsGreaterThan(9, errorResponse=BadRequestErrorResponse('b 는 9보다 커야 합니다')),
					errorResponse=BadRequestErrorResponse('b는 실수(부동 소수점)을 필요로 합니다.')
				)
			),
			'c': Validator(
				SetDefault(''),
				IsString(errorResponse=BadRequestErrorResponse('c는 문자열을 필요로 합니다.'))
			),
		}),
	)
)
